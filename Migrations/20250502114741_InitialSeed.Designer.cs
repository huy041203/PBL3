// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PBL3.Data;

#nullable disable

namespace PBL3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250502114741_InitialSeed")]
    partial class InitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PBL3.Models.BacSi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<decimal>("GiaKham")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KhoaId")
                        .HasColumnType("int");

                    b.Property<string>("MieuTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhongKham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SoNamKinhNghiem")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhoaId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BacSis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CCCD = "123456789012",
                            DiaChi = "Hà Nội",
                            DiemDanhGia = 4.7999999999999998,
                            GiaKham = 200000m,
                            GioiTinh = 0,
                            HoTen = "Nguyễn Văn A",
                            IsActive = true,
                            KhoaId = 1,
                            MieuTa = "Bác sĩ chuyên khoa Nội với 10 năm kinh nghiệm",
                            NgaySinh = new DateTime(1985, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhongKham = "P.101",
                            SoDienThoai = "0912345678",
                            SoNamKinhNghiem = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CCCD = "234567890123",
                            DiaChi = "Đà Nẵng",
                            DiemDanhGia = 4.9000000000000004,
                            GiaKham = 250000m,
                            GioiTinh = 1,
                            HoTen = "Trần Thị B",
                            IsActive = true,
                            KhoaId = 4,
                            MieuTa = "Bác sĩ chuyên khoa Sản với 8 năm kinh nghiệm",
                            NgaySinh = new DateTime(1988, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhongKham = "P.205",
                            SoDienThoai = "0923456789",
                            SoNamKinhNghiem = 8,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CCCD = "345678901234",
                            DiaChi = "Hồ Chí Minh",
                            DiemDanhGia = 4.7000000000000002,
                            GiaKham = 300000m,
                            GioiTinh = 0,
                            HoTen = "Lê Văn C",
                            IsActive = true,
                            KhoaId = 3,
                            MieuTa = "Bác sĩ chuyên khoa Nhi với 15 năm kinh nghiệm",
                            NgaySinh = new DateTime(1980, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhongKham = "P.307",
                            SoDienThoai = "0934567890",
                            SoNamKinhNghiem = 15,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("PBL3.Models.BanGhiYTe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BacSiId")
                        .HasColumnType("int");

                    b.Property<int>("BenhNhanId")
                        .HasColumnType("int");

                    b.Property<string>("ChanDoan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DaKhamLamSan")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("KetQuaKham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LichHenId")
                        .HasColumnType("int");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianBatDauKhamThucTe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThucKham")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TrieuChung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BacSiId");

                    b.HasIndex("BenhNhanId");

                    b.HasIndex("LichHenId")
                        .IsUnique();

                    b.HasIndex("SlotId")
                        .IsUnique();

                    b.ToTable("BanGhiYTes");
                });

            modelBuilder.Entity("PBL3.Models.BenhNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DiUng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhomMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SoDienThoaiNguoiThan")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TienSuBenh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BenhNhans");
                });

            modelBuilder.Entity("PBL3.Models.ChanDoanLamSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BanGhiYTeId")
                        .HasColumnType("int");

                    b.Property<string>("CanNang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChieuCao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("HuyetAp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NhietDo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NhipTim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TinhTrangBenh")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TrieuChung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BanGhiYTeId");

                    b.ToTable("ChanDoanLamSans");
                });

            modelBuilder.Entity("PBL3.Models.ChiTietDonThuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CachDung")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DonThuocId")
                        .HasColumnType("int");

                    b.Property<string>("LieuLuong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ThuocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonThuocId");

                    b.HasIndex("ThuocId");

                    b.ToTable("ChiTietDonThuocs");
                });

            modelBuilder.Entity("PBL3.Models.DonThuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BanGhiYTeId")
                        .HasColumnType("int");

                    b.Property<int>("BenhNhanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("GiaThuoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LuuLuong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BanGhiYTeId")
                        .IsUnique();

                    b.HasIndex("BenhNhanId");

                    b.HasIndex("ThuocId");

                    b.ToTable("DonThuocs");
                });

            modelBuilder.Entity("PBL3.Models.KetQuaXetNghiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BanGhiYTeId")
                        .HasColumnType("int");

                    b.Property<int>("BenhNhanId")
                        .HasColumnType("int");

                    b.Property<string>("BoPhanXetNghiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileKetQua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaXetNghiem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KetQua")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoaiXetNghiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianBatDauXetNghiem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThucXetNghiem")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BanGhiYTeId");

                    b.HasIndex("BenhNhanId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("KetQuaXetNghiems");
                });

            modelBuilder.Entity("PBL3.Models.Khoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Khoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Nội"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Ngoại"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Nhi"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Sản"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Mắt"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Tai Mũi Họng"
                        },
                        new
                        {
                            Id = 7,
                            Icon = "",
                            IsActive = true,
                            MoTa = "",
                            TenKhoa = "Khoa Da liễu"
                        });
                });

            modelBuilder.Entity("PBL3.Models.LichHenKham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BacSiId")
                        .HasColumnType("int");

                    b.Property<int>("BenhNhanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LyDoKham")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MaThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhiKham")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThaiLichHen")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiThanhToan")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BacSiId");

                    b.HasIndex("BenhNhanId");

                    b.ToTable("LichHenKhams");
                });

            modelBuilder.Entity("PBL3.Models.LichLamViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BacSiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLamViec")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoCaDuocKham")
                        .HasColumnType("int");

                    b.Property<int>("SoSlotDaDat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BacSiId");

                    b.ToTable("LichLamViecs");
                });

            modelBuilder.Entity("PBL3.Models.NhanVienYT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("GiaXetNghiem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiXetNghiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhongLamViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("NhanVienYTs");
                });

            modelBuilder.Entity("PBL3.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            RoleName = "Doctor"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            RoleName = "Staff"
                        });
                });

            modelBuilder.Entity("PBL3.Models.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BacSiId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("GioBatDau")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioKetThuc")
                        .HasColumnType("time");

                    b.Property<int>("LichLamViecId")
                        .HasColumnType("int");

                    b.Property<decimal>("TienKham")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TrangThaiDatLich")
                        .HasColumnType("bit");

                    b.Property<bool>("TrangThaiKham")
                        .HasColumnType("bit");

                    b.Property<bool>("TrangThaiThanhToan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BacSiId");

                    b.HasIndex("LichLamViecId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("PBL3.Models.Thuoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GiaThuoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HSDMonth")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaLa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MieuTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgaySanXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenThuoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Thuocs");
                });

            modelBuilder.Entity("PBL3.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hà Nội",
                            CreatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "doctor1@gmail.com",
                            FullName = "Nguyễn Văn A",
                            Gender = 0,
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEJmq47sOXHAcSZV1UrBbGkmAw8xK5FQfPV9kUK8LWZ1hEMv/wJBLnmTyLO0fLjqKxA==",
                            PhoneNumber = "0912345678",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "doctor1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Đà Nẵng",
                            CreatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "doctor2@gmail.com",
                            FullName = "Trần Thị B",
                            Gender = 1,
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEJmq47sOXHAcSZV1UrBbGkmAw8xK5FQfPV9kUK8LWZ1hEMv/wJBLnmTyLO0fLjqKxA==",
                            PhoneNumber = "0923456789",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "doctor2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hồ Chí Minh",
                            CreatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "doctor3@gmail.com",
                            FullName = "Lê Văn C",
                            Gender = 0,
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEJmq47sOXHAcSZV1UrBbGkmAw8xK5FQfPV9kUK8LWZ1hEMv/wJBLnmTyLO0fLjqKxA==",
                            PhoneNumber = "0934567890",
                            RoleId = 2,
                            UpdatedAt = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "doctor3"
                        });
                });

            modelBuilder.Entity("PBL3.Models.BacSi", b =>
                {
                    b.HasOne("PBL3.Models.Khoa", "Khoa")
                        .WithMany("BacSis")
                        .HasForeignKey("KhoaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.User", "User")
                        .WithOne("BacSi")
                        .HasForeignKey("PBL3.Models.BacSi", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBL3.Models.BanGhiYTe", b =>
                {
                    b.HasOne("PBL3.Models.BacSi", "BacSi")
                        .WithMany("BanGhiYTes")
                        .HasForeignKey("BacSiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.BenhNhan", "BenhNhan")
                        .WithMany("BanGhiYTes")
                        .HasForeignKey("BenhNhanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.LichHenKham", "LichHenKham")
                        .WithOne("BanGhiYTe")
                        .HasForeignKey("PBL3.Models.BanGhiYTe", "LichHenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.Slot", "Slot")
                        .WithOne("BanGhiYTe")
                        .HasForeignKey("PBL3.Models.BanGhiYTe", "SlotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("BenhNhan");

                    b.Navigation("LichHenKham");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("PBL3.Models.BenhNhan", b =>
                {
                    b.HasOne("PBL3.Models.User", "User")
                        .WithOne("BenhNhan")
                        .HasForeignKey("PBL3.Models.BenhNhan", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBL3.Models.ChanDoanLamSan", b =>
                {
                    b.HasOne("PBL3.Models.BanGhiYTe", "BanGhiYTe")
                        .WithMany("ChanDoanLamSans")
                        .HasForeignKey("BanGhiYTeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BanGhiYTe");
                });

            modelBuilder.Entity("PBL3.Models.ChiTietDonThuoc", b =>
                {
                    b.HasOne("PBL3.Models.DonThuoc", "DonThuoc")
                        .WithMany("ChiTietDonThuocs")
                        .HasForeignKey("DonThuocId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.Thuoc", "Thuoc")
                        .WithMany("ChiTietDonThuocs")
                        .HasForeignKey("ThuocId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DonThuoc");

                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("PBL3.Models.DonThuoc", b =>
                {
                    b.HasOne("PBL3.Models.BanGhiYTe", "BanGhiYTe")
                        .WithOne("DonThuoc")
                        .HasForeignKey("PBL3.Models.DonThuoc", "BanGhiYTeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.BenhNhan", "BenhNhan")
                        .WithMany("DonThuocs")
                        .HasForeignKey("BenhNhanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.Thuoc", "Thuoc")
                        .WithMany("DonThuocs")
                        .HasForeignKey("ThuocId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BanGhiYTe");

                    b.Navigation("BenhNhan");

                    b.Navigation("Thuoc");
                });

            modelBuilder.Entity("PBL3.Models.KetQuaXetNghiem", b =>
                {
                    b.HasOne("PBL3.Models.BanGhiYTe", "BanGhiYTe")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("BanGhiYTeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.BenhNhan", "BenhNhan")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("BenhNhanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.NhanVienYT", "NhanVienYT")
                        .WithMany("KetQuaXetNghiems")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BanGhiYTe");

                    b.Navigation("BenhNhan");

                    b.Navigation("NhanVienYT");
                });

            modelBuilder.Entity("PBL3.Models.LichHenKham", b =>
                {
                    b.HasOne("PBL3.Models.BacSi", "BacSi")
                        .WithMany("LichHenKhams")
                        .HasForeignKey("BacSiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.BenhNhan", "BenhNhan")
                        .WithMany("LichHenKhams")
                        .HasForeignKey("BenhNhanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("BenhNhan");
                });

            modelBuilder.Entity("PBL3.Models.LichLamViec", b =>
                {
                    b.HasOne("PBL3.Models.BacSi", "BacSi")
                        .WithMany("LichLamViecs")
                        .HasForeignKey("BacSiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BacSi");
                });

            modelBuilder.Entity("PBL3.Models.NhanVienYT", b =>
                {
                    b.HasOne("PBL3.Models.User", "User")
                        .WithOne("NhanVienYT")
                        .HasForeignKey("PBL3.Models.NhanVienYT", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBL3.Models.Slot", b =>
                {
                    b.HasOne("PBL3.Models.BacSi", "BacSi")
                        .WithMany("Slots")
                        .HasForeignKey("BacSiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBL3.Models.LichLamViec", "LichLamViec")
                        .WithMany("Slots")
                        .HasForeignKey("LichLamViecId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("LichLamViec");
                });

            modelBuilder.Entity("PBL3.Models.User", b =>
                {
                    b.HasOne("PBL3.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PBL3.Models.BacSi", b =>
                {
                    b.Navigation("BanGhiYTes");

                    b.Navigation("LichHenKhams");

                    b.Navigation("LichLamViecs");

                    b.Navigation("Slots");
                });

            modelBuilder.Entity("PBL3.Models.BanGhiYTe", b =>
                {
                    b.Navigation("ChanDoanLamSans");

                    b.Navigation("DonThuoc");

                    b.Navigation("KetQuaXetNghiems");
                });

            modelBuilder.Entity("PBL3.Models.BenhNhan", b =>
                {
                    b.Navigation("BanGhiYTes");

                    b.Navigation("DonThuocs");

                    b.Navigation("KetQuaXetNghiems");

                    b.Navigation("LichHenKhams");
                });

            modelBuilder.Entity("PBL3.Models.DonThuoc", b =>
                {
                    b.Navigation("ChiTietDonThuocs");
                });

            modelBuilder.Entity("PBL3.Models.Khoa", b =>
                {
                    b.Navigation("BacSis");
                });

            modelBuilder.Entity("PBL3.Models.LichHenKham", b =>
                {
                    b.Navigation("BanGhiYTe");
                });

            modelBuilder.Entity("PBL3.Models.LichLamViec", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("PBL3.Models.NhanVienYT", b =>
                {
                    b.Navigation("KetQuaXetNghiems");
                });

            modelBuilder.Entity("PBL3.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PBL3.Models.Slot", b =>
                {
                    b.Navigation("BanGhiYTe");
                });

            modelBuilder.Entity("PBL3.Models.Thuoc", b =>
                {
                    b.Navigation("ChiTietDonThuocs");

                    b.Navigation("DonThuocs");
                });

            modelBuilder.Entity("PBL3.Models.User", b =>
                {
                    b.Navigation("BacSi");

                    b.Navigation("BenhNhan");

                    b.Navigation("NhanVienYT");
                });
#pragma warning restore 612, 618
        }
    }
}
